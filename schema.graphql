type Account {
	planId: ID
	status: String
	stripeCustomerId: String
	stripeSubscriptionId: String
	trialEnd: DateTime
	ownerId: String!
	id: ID!
	plan: Plan
}
type Address {
	city: String!
	line1: String!
	line2: String
	postalCode: String!
}
scalar AuthID
scalar DateTime
scalar Decimal
type Lease {
	accountId: ID!
	depositAmount: Decimal
	effectDate: DateTime!
	signatureDate: DateTime
	rentAmount: Decimal!
	rentChargesAmount: Decimal
	type: LeaseType!
	leaseId: ID
	propertyId: ID!
	id: ID!
	data: LeaseData
	expiredAt: DateTime
	renewDate: DateTime
}
type LeaseData {
	duration: String
	rentPaymentMethod: String
}
enum LeaseType {
	FURNISHED
	NAKED
}
type Mutation {
	userCreateWithAccount: String!
}
type Person {
	authId: AuthID!
	email: String!
	firstName: String
	lastName: String
	address: Address
	photoURL: String
	role: String
	id: ID!
	phoneNumber: String
	accountId: ID!
	displayName: String!
	account: Account!
}
type Plan {
	code: String!
	price: Decimal
	subtitle: String
	title: String
	id: ID!
}
type Property {
	accountId: ID
	address: Address!
	buildPeriod: String
	buildingLegalStatus: String
	commonSpaces: String
	energyClass: String
	equipments: String
	gasEmission: String
	heatingMethod: String
	housingType: String
	name: String!
	note: String
	nticEquipments: String
	otherSpaces: String
	tax: Float
	roomCount: String!
	status: String
	surface: Int!
	tenantPrivateSpaces: String
	usageType: String
	waterHeatingMethod: String
	id: ID!
	lenderId: ID!
}
type Query {
	viewer: Person!
	properties: [Property!]!
	tenants: [Tenant!]!
	leases: [Lease!]!
}
type Tenant {
	accountId: ID!
	apl: Boolean!
	authId: AuthID
	birthdate: DateTime!
	birthplace: String
	email: String!
	firstName: String!
	lastName: String!
	note: String
	phoneNumber: String
	role: String
	id: ID!
	leaseId: ID
	visaleId: String
}
schema {
	query: Query
	mutation: Mutation
}
